version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - kafka-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-create-topics:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-create-topics
    networks:
      - kafka-network
    depends_on:
      - kafka
    command: "bash -c 'cub kafka-ready -b kafka:9092 1 30 && \
              kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 \
                --replication-factor 1 --partitions 1 --topic springCloudBus'"

  mini-io-bucket:
    image: minio/minio:latest
    container_name: mini-io-bucket
    networks:
      - kafka-network
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"

  mini-io-setup:
    image: minio/mc:latest
    container_name: mini-io-setup
    networks:
      - kafka-network
    depends_on:
      - mini-io-bucket
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "mc alias set minio http://mini-io-bucket:9000 minio minio123 &&
      mc mb minio/spring-cloud-config"


  kafka-app-01:
    image: kafka-demo-app:0.0.1
    container_name: kafka-app-01
    depends_on:
      - kafka-create-topics
      - kafka
      - mini-io-bucket
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
      SPRING_CLOUD_BUS_ID: kafka-app-01
      MINIO_ENDPOINT: http://mini-io-bucket:9000
    networks:
      - kafka-network
    ports:
      - "8080:8080"

  kafka-app-02:
    image: kafka-demo-app:0.0.1
    container_name: kafka-app-02
    depends_on:
      - kafka-create-topics
      - kafka
      - mini-io-bucket
    environment:
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
      SPRING_CLOUD_BUS_ID: kafka-app-02
      MINIO_ENDPOINT: http://mini-io-bucket:9000
    networks:
      - kafka-network
    ports:
      - "8081:8080"

networks:
  kafka-network:
    driver: bridge